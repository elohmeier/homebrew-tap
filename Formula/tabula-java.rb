class TabulaJava < Formula
  desc "Extract tables from PDF files (Java command-line tool)"
  homepage "https://github.com/tabulapdf/tabula-java"
  license "MIT"

  # HEAD build ONLY: Fetches the latest commit from the 'master' branch.
  head "https://github.com/tabulapdf/tabula-java.git", branch: "master"

  # Dependencies remain the same
  depends_on "openjdk"
  depends_on "maven" => :build

  def install
    # --- Patching Step ---
    # Modify the source file CommandLineApp.java before building.
    # This changes the command name used by HelpFormatter in the help output.
    # We target the specific line to avoid unintended replacements.
    inreplace "src/main/java/technology/tabula/CommandLineApp.java",
              'formatter.printHelp("tabula", BANNER',
              'formatter.printHelp("tabula-java", BANNER'

    # --- Build Step ---
    # Build using 'compile assembly:single' to get the fat JAR, skip tests
    system "mvn", "compile", "assembly:single", "-Dmaven.test.skip=true"

    # --- Installation Step ---
    # Find the JAR generated by assembly:single using a pattern (globbing).
    jar_pattern = "target/tabula-*-jar-with-dependencies.jar"
    jar_file = Dir[jar_pattern].first

    # Error handling if the JAR isn't found
    unless jar_file
      odie "Build failed: Could not find JAR file matching pattern '#{jar_pattern}' in target directory."
    end

    # Install the found fat JAR into libexec, renaming it to 'tabula.jar'
    libexec.install jar_file => "tabula.jar"

    # Create the wrapper script in 'bin' pointing to the renamed JAR
    (bin/"tabula-java").write <<~EOS
      #!/bin/bash
      # Find the installed Java provided by the openjdk formula dependency
      JAVA_HOME="#{Formula["openjdk"].opt_prefix}"
      # Execute the renamed JAR file located in libexec, passing all arguments ($@)
      exec "${JAVA_HOME}/bin/java" -jar "#{libexec}/tabula.jar" "$@"
    EOS
  end

  test do
    # Test the help output to ensure the patch was applied correctly.
    # HelpFormatter usually outputs "usage: cmdName [...]"
    assert_match "usage: tabula-java", shell_output("#{bin}/tabula-java --help")
  end
end
